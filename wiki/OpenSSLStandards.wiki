#labels OpenSSL,OpenSSLKeyPadding,OpenSSLPBE
=OpenSSL Standards and quirks=

= Introduction =

I plan to keep this page up to date with OpenSSL standards for interoperability.


= Details =

== Padding ==
OpenSSL pads its AES 16 byte blocks, with a value equal to the number of padded bytes (this approach is known as PKCS7 padding, see for example http://www.cryptostuff.com/crypto/index.php?title=blockpad).

For example, the following unencrypted 16 Byte block

|| ff || ff || ff || ff ||
|| ff || ff || ff || 03 ||
|| ff || ff || ff || 03 ||
|| ff || ff || ff || 03 ||

has a final byte value of 0x03, which means that the 3 last bytes are padding and should be removed. This rule also means that when presented with a final block of exactly 16 bytes, one would need to add a block filled with the byte value of 16 or 0x10. 

Example

|| ee || aa || bb || aa ||
|| ff || bb || aa || bb ||
|| aa || cc || cc || cc ||
|| bb || dd || dd || dd ||

|| 10 || 10 || 10 || 10 ||
|| 10 || 10 || 10 || 10 ||
|| 10 || 10 || 10 || 10 ||
|| 10 || 10 || 10 || 10 ||

=== OpenSSL PBE ===
http://www.rsa.com/rsalabs/node.asp?id=2127

OpenSSL uses PKCS 5 v1.5 to generate a key and iv from a password string and randon 8 byte salt. OpenSSL only used a MD5 hash iteration of 1, where as most PKCS 5 docs call for iterations of 2000 or more in order to make dictionary attacks much more expensive.

,, (I'll include my JS code for this tomorrow. For now, here's a link to a valid C# version - http://jensign.com/JavaScience/dotnet/DeriveKeyM/index.html) ,,


=== Base64 Encoding ===

In order to remain compatible with OpenSSL, Base64 lines should break every 64 characters. If the Base64 encoded string is less than 64 characters, a break should be included at the end automatically. If it more than 1 line, breaks only need to be included every 64 characters, and not at the end of the last line.

